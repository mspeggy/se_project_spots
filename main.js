!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};function t(e,t,r){t.forEach(t=>{const n=e.querySelector(`#${t.id}-error`);n&&(t.classList.remove(r.inputErrorClass),n.textContent="",n.classList.remove(r.errorClass))});const n=e.querySelector(r.submitButtonSelector);n&&(n.disabled=!0,n.classList.add(r.inactiveButtonClass))}const r=(e,t,r)=>{(e=>e.some(e=>!e.validity.valid))(e)?((e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)})(t,r):((e,t)=>{e.disabled=!1,e.classList.remove(t.inactiveButtonClass)})(t,r)};function n(e,t,r="Save",n="Saving..."){e&&(t?(e.dataset.originalText||(e.dataset.originalText=e.textContent),e.textContent=n):(e.textContent=e.dataset.originalText||r,e.disabled=!1))}const o=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse)}addCard({name:e,link:t}){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._handleResponse)}editUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)})}likeStatus(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then(e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f14e21ea-8f06-4616-983e-92c4689bb859","Content-Type":"application/json"}}),a=document.querySelector(".profile__edit-btn"),s=document.querySelector(".profile__add-btn"),l=document.querySelector(".profile__name"),c=document.querySelector(".profile__description"),i=document.querySelector(".profile__avatar"),d=document.querySelector(".profile__avatar-btn"),u=document.querySelector("#edit-modal"),m=document.querySelector("#add-card-modal"),_=document.querySelector("#avatar-modal"),h=document.querySelector("#preview-modal"),v=document.querySelector("#delete-modal"),y=u.querySelector(".modal__form"),S=m.querySelector(".modal__form"),p=_.querySelector("#edit-avatar-form"),f=v.querySelector("#delete-form"),b=u.querySelector("#profile-name-input"),q=u.querySelector("#profile-description-input"),k=m.querySelector("#add-card-name-input"),E=m.querySelector("#add-card-link-input"),L=_.querySelector("#profile-avatar-input"),C=u.querySelector(".modal__close-btn"),g=m.querySelector(".modal__close-btn"),x=_.querySelector(".modal__close-btn"),U=h.querySelector(".modal__close-btn"),$=v.querySelector(".modal__close-btn"),A=(f.querySelector('button[type="submit"]'),f.querySelector('button[type="button"]')),T=h.querySelector(".modal__image"),I=h.querySelector(".modal__caption"),P=document.querySelector("#card-template"),j=document.querySelector(".cards__list");let B=null,D=null;function R(e){e.classList.add("modal_opened"),document.addEventListener("keydown",N)}function w(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",N)}function N(e){if("Escape"===e.key){const e=document.querySelector(".modal_opened");e&&w(e)}}function O(e){const t=P.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__image"),n=t.querySelector(".card__title"),a=t.querySelector(".card__like-btn"),s=t.querySelector(".card__delete-btn");return r.src=e.link,r.alt=e.name,n.textContent=e.name,e.isLiked&&a.classList.add("card__like-btn_liked"),a.addEventListener("click",()=>{const t=a.classList.contains("card__like-btn_liked");o.likeStatus(e._id,t).then(()=>{a.classList.toggle("card__like-btn_liked")}).catch(e=>{console.error("Failed to toggle like:",e)})}),r.addEventListener("click",()=>{T.src=e.link,T.alt=e.name,I.textContent=e.name,R(h)}),s.addEventListener("click",()=>{B=t,D=e._id,R(v)}),t}document.querySelectorAll(".modal").forEach(e=>{e.addEventListener("mousedown",t=>{t.target===e&&w(e)})});let J=null;var H;o.getAppInfo().then(([e,t])=>{J=t._id,i.src=t.avatar,i.alt=t.name,l.textContent=t.name,c.textContent=t.about,e.forEach(e=>{const t=O(e);j.append(t)})}).catch(console.error),a.addEventListener("click",()=>{b.value=l.textContent,q.value=c.textContent,t(u,[b,q],e),R(u)}),y.addEventListener("submit",e=>{e.preventDefault();const t=e.submitter;n(t,!0),o.editUserInfo({name:b.value,about:q.value}).then(e=>{l.textContent=e.name,c.textContent=e.about,w(u)}).catch(console.error).finally(()=>{n(t,!1,"Save")})}),s.addEventListener("click",()=>{t(m,[k,E],e),S.reset(),R(m)}),S.addEventListener("submit",e=>{e.preventDefault();const t=e.submitter;n(t,!0),o.addCard({name:k.value,link:E.value}).then(e=>{const t=O(e);j.prepend(t),S.reset(),w(m)}).catch(console.error).finally(()=>{n(t,!1,"Save")})}),d.addEventListener("click",()=>{t(_,[L],e),p.reset(),R(_)}),p.addEventListener("submit",e=>{e.preventDefault();const t=e.submitter;n(t,!0),o.updateAvatar(L.value).then(e=>{i.src=e.avatar,w(_),p.reset()}).catch(console.error).finally(()=>{n(t,!1,"Save")})}),U.addEventListener("click",()=>w(h)),f.addEventListener("submit",e=>{e.preventDefault();const t=e.submitter;n(t,!0,"Yes","Deleting..."),D&&B&&o.deleteCard(D).then(()=>{B.remove(),w(v),D=null,B=null}).catch(console.error).finally(()=>{n(t,!1,"Yes")})}),A.addEventListener("click",()=>{w(v),B=null,D=null}),$.addEventListener("click",()=>{w(v),B=null,D=null}),C.addEventListener("click",()=>w(u)),g.addEventListener("click",()=>w(m)),x.addEventListener("click",()=>w(_)),H=e,Array.from(document.querySelectorAll(H.formSelector)).forEach(e=>{((e,t)=>{const n=Array.from(e.querySelectorAll(t.inputSelector)),o=e.querySelector(t.submitButtonSelector);o&&(r(n,o,t),n.forEach(a=>{a.addEventListener("input",()=>{((e,t,r)=>{t.validity.valid?((e,t,r)=>{const n=e.querySelector(`#${t.id}-error`);n.textContent="",t.classList.remove(r.inputErrorClass),n.classList.remove(r.errorClass)})(e,t,r):((e,t,r,n)=>{const o=e.querySelector(`#${t.id}-error`);o.textContent=r,t.classList.add(n.inputErrorClass),o.classList.add(n.errorClass)})(e,t,t.validationMessage,r)})(e,a,t),r(n,o,t)})}))})(e,H)})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,